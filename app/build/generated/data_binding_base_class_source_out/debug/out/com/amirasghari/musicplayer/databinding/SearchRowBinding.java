// Generated by data binding compiler. Do not edit!
package com.amirasghari.musicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.amirasghari.musicplayer.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SearchRowBinding extends ViewDataBinding {
  @NonNull
  public final TextView artistText;

  @NonNull
  public final Guideline guid50Hor;

  @NonNull
  public final CardView musicCard;

  @NonNull
  public final ConstraintLayout musicCons;

  @NonNull
  public final ImageView musicImg;

  @NonNull
  public final CardView musicImgCard;

  @NonNull
  public final TextView musicText;

  protected SearchRowBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView artistText, Guideline guid50Hor, CardView musicCard, ConstraintLayout musicCons,
      ImageView musicImg, CardView musicImgCard, TextView musicText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.artistText = artistText;
    this.guid50Hor = guid50Hor;
    this.musicCard = musicCard;
    this.musicCons = musicCons;
    this.musicImg = musicImg;
    this.musicImgCard = musicImgCard;
    this.musicText = musicText;
  }

  @NonNull
  public static SearchRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_row, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SearchRowBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SearchRowBinding>inflateInternal(inflater, R.layout.search_row, root, attachToRoot, component);
  }

  @NonNull
  public static SearchRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.search_row, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SearchRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SearchRowBinding>inflateInternal(inflater, R.layout.search_row, null, false, component);
  }

  public static SearchRowBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SearchRowBinding bind(@NonNull View view, @Nullable Object component) {
    return (SearchRowBinding)bind(component, view, R.layout.search_row);
  }
}
